static void NotebookDialog::Update(Character* characterSpeakingTo, Dialog* charactersDialog, Dialog* subjectsDialog)
{
  activeCharacterDialog = charactersDialog;
  activeSubjectDialog   = subjectsDialog;
  //activeEvidenceDialog = evidenceDialog;
  currentNotebookContextID = characterSpeakingTo.ID;
  
  activeDialog = activeCharacterDialog;
}

static void NotebookDialog::UpdateOptionId(int optionId)
{
  activeDialogOptionId = optionId;
}

static void NotebookDialog::Clear()
{
  activeCharacterDialog = null;
  activeSubjectDialog = null;
  activeDialogOptionId = 0;
  currentNotebookContextID = 0;
  activeDialog = null;
}

static bool NotebookDialog::IsSet()
{
  return activeDialog != null;
}

static int NotebookDialog::ActiveDialogOptionId(int activeDialogOptionId_param)
{
  if (activeDialogOptionId_param < -1)
    return activeDialogOptionId;
    
  activeDialogOptionId = activeDialogOptionId_param;
  return activeDialogOptionId;
}

static void NotebookDialog::StartDialog()
{
  if (activeDialog == null || activeDialogOptionId < 0)
  {
    System.Log(eLogWarn, String.Format("NotebookDialog::StartDialog -- activeDialog == null: %d, activeDialogOptionId: %d",
      activeDialog == null, activeDialogOptionId));
    return;
  }
  
  activeDialog.Start();
}

static void NotebookDialog::Log()
{
  //System.Log(eLogInfo, String.Format("NotebookDialog::StartDialog -- activeDialog == null: %d, activeDialogOptionId: %d, currentNotebookContextID: %d",
      //activeDialog == null, activeDialogOptionId, currentNotebookContextID));
}

CharacterButton* characterButtons[];

function initialize_notebook_characters()
{
  characterButtons = new CharacterButton[12];
  
  int startingSprite = 1197;
  for (int i = 0; i < 12; i++)
  {
    characterButtons[i] = new CharacterButton();
    characterButtons[i].Init(
      startingSprite,
      startingSprite + (12 * 3),
      startingSprite + (12 * 3),
      
      startingSprite + (12 * 1),
      startingSprite + (12 * 1),
      startingSprite + (12 * 1),
      
      startingSprite + (12 * 2),
      startingSprite + (12 * 2),
      startingSprite + (12 * 2)
    );
    
    if (i == 0 || i == 1) {
      gNotebookCharacters.Controls[i].AsButton.NormalGraphic = characterButtons[i].ColoredGraphic;
      gNotebookCharacters.Controls[i].AsButton.MouseOverGraphic = characterButtons[i].ColoredMousedOverGraphic;
      gNotebookCharacters.Controls[i].AsButton.PushedGraphic = characterButtons[i].ColoredPushedGraphic;
      characterButtons[i].Variant = eColored;
    } else {
      gNotebookCharacters.Controls[i].AsButton.NormalGraphic = characterButtons[i].SilhouetteGraphic;
      gNotebookCharacters.Controls[i].AsButton.MouseOverGraphic = characterButtons[i].SilhouetteMousedOverGraphic;
      gNotebookCharacters.Controls[i].AsButton.PushedGraphic = characterButtons[i].SilhouettePushedGraphic;
      characterButtons[i].Variant = eSilhouette;
    }
    
    startingSprite++;
  }
}

function handle_character_button(GUIControl *control)
{
  Button* button = control.AsButton;
  if (button == null) return;
  
  if (characterButtons == null)
    initialize_notebook_characters();

  CharacterButton* characterButton = characterButtons[button.ID];
  
  if (characterButton.Variant == eSilhouette)
  {
    dNotebookCharacters.Start();
    return;
  }
    
  if (activeDialog != null)
  {
    activeDialogOptionId = button.ID +  1;
    player.ChangeRoom(player.PreviousRoom);
    return;
  }
}

function color_character_button(Character *theCharacter)
{
  int characterID = theCharacter.ID;
  
  gNotebookCharacters.Controls[characterID].AsButton.NormalGraphic = characterButtons[characterID].ColoredGraphic;
  gNotebookCharacters.Controls[characterID].AsButton.MouseOverGraphic = characterButtons[characterID].ColoredMousedOverGraphic;
  gNotebookCharacters.Controls[characterID].AsButton.PushedGraphic = characterButtons[characterID].ColoredPushedGraphic;
  characterButtons[characterID].Variant = eColored;
}

// Characters
function gNotebookCharacters_OnClickHandler(GUI *theGui, MouseButton button)
{
  if (button == eMouseLeft)
  {
    if (mouse.Mode == eModeExit)
    {
      player.ChangeRoom(player.PreviousRoom);
      activeDialog = null;
      return;
    }
  }
}

function claraNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function stoneNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function veraNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function joannaNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function salvatoreNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function queenieNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function maxNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function teresaNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function lucindaNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function samirNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function drkhanNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function carlosNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function btnCharactersToSubjects_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(1);
  gNotebookCharacters.Visible = false;
  gNotebookSubjects.Visible = true;
}

function btnCharactersToEvidence_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(2);
  gNotebookCharacters.Visible = false;
  gNotebookEvidence.Visible = true;
}

// Subjects
function btnSubjectsToCharacters_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(0);
  gNotebookSubjects.Visible = false;
  gNotebookCharacters.Visible = true;
}

function btnSubjectsToEvidence_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(2);
  gNotebookSubjects.Visible = false;
  gNotebookEvidence.Visible = true;
}


// Evidence
function btnEvidenceToCharacters_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(0);
  gNotebookEvidence.Visible = false;
  gNotebookCharacters.Visible = true;
}

function btnEvidenceToSubjects_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(1);
  gNotebookEvidence.Visible = false;
  gNotebookSubjects.Visible = true;
}


NotebookButton* characterButtons[];
NotebookButton* subjectButtons[];
NotebookButton* evidenceButtons[];
NotebookContext* notebookContexts[];

function initialize_notebook_character_buttons()
{
  characterButtons = new NotebookButton[12];
  
  int startingSprite = 1197;
  for (int i = 0; i < 12; i++)
  {
    characterButtons[i] = new NotebookButton();

    characterButtons[i].coloredGraphic = startingSprite;
    characterButtons[i].coloredMousedOverGraphic = startingSprite + (12 * 3);
    characterButtons[i].coloredPushedGraphic = startingSprite + (12 * 3);

    characterButtons[i].greyGraphic = startingSprite + (12 * 1);
    characterButtons[i].greyMousedOverGraphic = startingSprite + (12 * 1);
    characterButtons[i].greyPushedGraphic = startingSprite + (12 * 1);

    characterButtons[i].silhouetteGraphic = startingSprite + (12 * 2);
    characterButtons[i].silhouetteMousedOverGraphic = startingSprite + (12 * 2);
    characterButtons[i].silhouettePushedGraphic = startingSprite + (12 * 2);
    
    startingSprite++;
  }
  
  gNotebookCharacters.Visible = false;
}

function initialize_notebook_subject_buttons()
{
  subjectButtons = new NotebookButton[12];
  
  int startingSprite = 1197;
  for (int i = 0; i < 12; i++)
  {
    /*
    subjectButtons[i] = new NotebookButton();

    subjectButtons[i].coloredGraphic = startingSprite;
    subjectButtons[i].coloredMousedOverGraphic = startingSprite + (12 * 3);
    subjectButtons[i].coloredPushedGraphic = startingSprite + (12 * 3);

    subjectButtons[i].greyGraphic = startingSprite + (12 * 1);
    subjectButtons[i].greyMousedOverGraphic = startingSprite + (12 * 1);
    subjectButtons[i].greyPushedGraphic = startingSprite + (12 * 1);

    subjectButtons[i].silhouetteGraphic = startingSprite + (12 * 2);
    subjectButtons[i].silhouetteMousedOverGraphic = startingSprite + (12 * 2);
    subjectButtons[i].silhouettePushedGraphic = startingSprite + (12 * 2);

    subjectButtons[i].variant = eSilhouette;
    
    gNotebookSubjects.Controls[i].AsButton.NormalGraphic = subjectButtons[i].silhouetteGraphic;
    gNotebookSubjects.Controls[i].AsButton.MouseOverGraphic = subjectButtons[i].silhouetteMousedOverGraphic;
    gNotebookSubjects.Controls[i].AsButton.PushedGraphic = subjectButtons[i].silhouettePushedGraphic;
    */

    startingSprite++;
  }
  
  gNotebookSubjects.Visible = false;
}

function initialize_notebook_evidence_buttons()
{
  evidenceButtons = new NotebookButton[12];
  
  int startingSprite = 1197;
  for (int i = 0; i < 12; i++)
  {
    /*
    evidenceButtons[i] = new NotebookButton();

    evidenceButtons[i].coloredGraphic = startingSprite;
    evidenceButtons[i].coloredMousedOverGraphic = startingSprite + (12 * 3);
    evidenceButtons[i].coloredPushedGraphic = startingSprite + (12 * 3);

    evidenceButtons[i].greyGraphic = startingSprite + (12 * 1);
    evidenceButtons[i].greyMousedOverGraphic = startingSprite + (12 * 1);
    evidenceButtons[i].greyPushedGraphic = startingSprite + (12 * 1);

    evidenceButtons[i].silhouetteGraphic = startingSprite + (12 * 2);
    evidenceButtons[i].silhouetteMousedOverGraphic = startingSprite + (12 * 2);
    evidenceButtons[i].silhouettePushedGraphic = startingSprite + (12 * 2);

    evidenceButtons[i].variant = eSilhouette;
    
    gNotebookEvidence.Controls[i].AsButton.NormalGraphic = evidenceButtons[i].silhouetteGraphic;
    gNotebookEvidence.Controls[i].AsButton.MouseOverGraphic = evidenceButtons[i].silhouetteMousedOverGraphic;
    gNotebookEvidence.Controls[i].AsButton.PushedGraphic = evidenceButtons[i].silhouettePushedGraphic;
    
    startingSprite++;
    */
  }
  
  gNotebookEvidence.Visible = false;
}

function initialize_notebook_contexts()
{
  notebookContexts = new NotebookContext[12];
  for (int i = 0; i < 12; i++)
  {
    notebookContexts[i] = new NotebookContext();
    for (int j = 0; j < 12; j++)
    {
      if (j == 0 || j == 1)
      {
        notebookContexts[i].characterVariants[j] = eColored;
      }
      else
      {
        notebookContexts[i].characterVariants[j] = eSilhouette;
      }
    }

    for (int k = 0; k < 12; k++)
    {
      notebookContexts[i].subjectVariants[k] = eSilhouette;
    }

    for (int l = 0; l < 12; l++)
    {
      notebookContexts[i].evidenceVariants[l] = eSilhouette;
    }
  }
}

function initialize_notebook()
{
    initialize_notebook_character_buttons();
    initialize_notebook_subject_buttons();
    initialize_notebook_evidence_buttons();
    initialize_notebook_contexts();
}

function handle_character_button(GUIControl *control)
{
  Button* button = control.AsButton;
  if (button == null) return;
  
  if (characterButtons == null)
    initialize_notebook_character_buttons();

  NotebookButton* characterButton = characterButtons[button.ID];
  
  if (characterButton.variant == eSilhouette)
  {
    dNotebookCharacters.Start();
    return;
  }
    
  if (activeDialog != null)
  {
    activeDialogOptionId = button.ID +  1;
    player.ChangeRoom(player.PreviousRoom);
    return;
  }
}

function color_in_character_button(Character *contextCharacter, Character *actionCharacter)
{
  notebookContexts[contextCharacter.ID].characterVariants[actionCharacter.ID] = eColored;
}

function grey_in_character_button(Character *contextCharacter, Character *actionCharacter)
{
  notebookContexts[contextCharacter.ID].characterVariants[actionCharacter.ID] = eGrey;
}

function silhouette_in_character_button(Character *contextCharacter, Character *actionCharacter)
{
  notebookContexts[contextCharacter.ID].characterVariants[actionCharacter.ID] = eSilhouette;
}

NotebookButtonVariant get_notebook_button_variant(Character *contextCharacter, Character *actionCharacter)
{
  return notebookContexts[contextCharacter.ID].characterVariants[actionCharacter.ID];
}

function populate_notebook()
{
  if (characterButtons == null)
    initialize_notebook_character_buttons();
  if (subjectButtons == null)
    initialize_notebook_subject_buttons();
  if (evidenceButtons == null)
    initialize_notebook_evidence_buttons();
  if (notebookContexts == null)
    initialize_notebook_contexts();
    
  for (int i = 0; i < 12; i++)
  {
    characterButtons[i].variant = notebookContexts[currentNotebookContextID].characterVariants[i];
    
    if (notebookContexts[currentNotebookContextID].characterVariants[i] == eColored)
    {
      gNotebookCharacters.Controls[i].AsButton.NormalGraphic = characterButtons[i].coloredGraphic;
      gNotebookCharacters.Controls[i].AsButton.MouseOverGraphic = characterButtons[i].coloredMousedOverGraphic;
      gNotebookCharacters.Controls[i].AsButton.PushedGraphic = characterButtons[i].coloredPushedGraphic;
    }
    else if (notebookContexts[currentNotebookContextID].characterVariants[i] == eGrey)
    {
      gNotebookCharacters.Controls[i].AsButton.NormalGraphic = characterButtons[i].greyGraphic;
      gNotebookCharacters.Controls[i].AsButton.MouseOverGraphic = characterButtons[i].greyMousedOverGraphic;
      gNotebookCharacters.Controls[i].AsButton.PushedGraphic = characterButtons[i].greyPushedGraphic;
    }
    else
    {
      gNotebookCharacters.Controls[i].AsButton.NormalGraphic = characterButtons[i].silhouetteGraphic;
      gNotebookCharacters.Controls[i].AsButton.MouseOverGraphic = characterButtons[i].silhouetteMousedOverGraphic;
      gNotebookCharacters.Controls[i].AsButton.PushedGraphic = characterButtons[i].silhouettePushedGraphic;
    }
  }
}

// Characters
function gNotebookCharacters_OnClickHandler(GUI *theGui, MouseButton button)
{
  if (button == eMouseLeft)
  {
    if (mouse.Mode == eModeExit)
    {
      player.ChangeRoom(player.PreviousRoom);
      activeDialog = null;
      return;
    }
  }
}

function claraNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function stoneNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function veraNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function joannaNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function salvatoreNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function queenieNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function maxNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function teresaNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function lucindaNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function samirNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function drkhanNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function carlosNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  handle_character_button(control);
}

function btnCharactersToSubjects_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(1);
  gNotebookCharacters.Visible = false;
  gNotebookSubjects.Visible = true;
}

function btnCharactersToEvidence_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(2);
  gNotebookCharacters.Visible = false;
  gNotebookEvidence.Visible = true;
}

// Subjects
function gNotebookSubjects_OnClickHandler(GUI *theGui, MouseButton button)
{
  if (button == eMouseLeft)
  {
    if (mouse.Mode == eModeExit)
    {
      player.ChangeRoom(player.PreviousRoom);
      activeDialog = null;
      return;
    }
  }
}

function btnSubjectsToCharacters_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(0);
  gNotebookSubjects.Visible = false;
  gNotebookCharacters.Visible = true;
}

function btnSubjectsToEvidence_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(2);
  gNotebookSubjects.Visible = false;
  gNotebookEvidence.Visible = true;
}


// Evidence
function gNotebookEvidence_OnClickHandler(GUI *theGui, MouseButton button)
{
  if (button == eMouseLeft)
  {
    if (mouse.Mode == eModeExit)
    {
      player.ChangeRoom(player.PreviousRoom);
      activeDialog = null;
      return;
    }
  }
}

function btnEvidenceToCharacters_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(0);
  gNotebookEvidence.Visible = false;
  gNotebookCharacters.Visible = true;
}

function btnEvidenceToSubjects_OnClickHandler(GUIControl *control, MouseButton button)
{
  SetBackgroundFrame(1);
  gNotebookEvidence.Visible = false;
  gNotebookSubjects.Visible = true;
}


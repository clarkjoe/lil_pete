//int locationID;
CursorMode mouseMode;
//LocationType locationType;
bool triggerAction;

function cEgo_LookHandler(Character *theCharacter, CursorMode mode)
{
  Display("Damn, I'm looking good!");
}

function cEgo_TalkHandler(Character *theCharacter, CursorMode mode)
{
  Display("Talking to yourself is a sign of madness!");
}

function cEgo_UseInvHandler(Character *theCharacter, CursorMode mode)
{
  switch(cEgo.ActiveInventory)
  {
    case iCompact:
      cEgo.LockViewOffset(CLARAUSEOBJECTS_1010, -1, 0);
      cEgo.Animate(0, 9, eOnce, eBlock, eForwards);
      cEgo.UnlockView();
      cEgo.Direction(eDirectionDown);
      break;
    case iMagazine:
      currentMouseButton = eMouseRightInv;
      iMagazine.RunInteraction(eModeInteract);
      break;
    case iMatchbox:
      cEgo.LockViewOffset(CLARAUSEOBJECTS_1010, -4, 0);
      cEgo.Animate(1, 9, eOnce, eBlock, eForwards);
      cEgo.UnlockView();
      cEgo.Direction(eDirectionDown);
      break;
    case iCigar:
      cEgo.LockViewOffset(CLARAUSEOBJECTS_1010, -6, 0);
      cEgo.Animate(2, 9, eOnce, eBlock, eForwards);
      cEgo.UnlockView();
      cEgo.Direction(eDirectionDown);
    default:
     break;
  }
}

function repeatedly_execute()
{
  if (player.HasReachedDestination())
  {
    if (!triggerAction)
    {
      return;
    }
    triggerAction = false;
    System.Log(eLogInfo, String.Format("cEgo.asc -- player.DestinationDirection -- x: %d", player.DestinationDirection()));
    player.Direction(player.DestinationDirection());
    if (cEgo.DestinationType() == eLocationHotspot)
    {
      hotspot[cEgo.DestinationID()].RunInteraction(mouseMode);
    }
    else if (cEgo.DestinationType() == eLocationObject)
    {
      object[cEgo.DestinationID()].RunInteraction(mouseMode);
    }
    else if (cEgo.DestinationType() == eLocationCharacter)
    {
      character[cEgo.DestinationID()].RunInteraction(mouseMode);
    }
  }
}

function on_mouse_click(MouseButton button)
{
  if (button == eMouseLeft) {
    LocationType locationType = GetLocationType(mouse.x, mouse.y);
    cEgo.DestinationType(locationType);
    if (cEgo.DestinationType() == eLocationNothing && mouse.Mode != eModeExit)
    {
      triggerAction = false;
      player.CancelableWalk(Game.Camera.X + mouse.x, Game.Camera.Y + mouse.y, eDirectionNone);
      return;
    }
    
    ClaimEvent();
    triggerAction = true;
    player.StopMoving();

    if (cEgo.DestinationType() == eLocationHotspot)
    {
      Hotspot* h = Hotspot.GetAtScreenXY(mouse.x, mouse.y);
      cEgo.DestinationID(h.ID);
    }
    else if (cEgo.DestinationType() == eLocationObject)
    {
      Object* o = Object.GetAtScreenXY(mouse.x, mouse.y);
      Point* oDestination = o.Destination();
      if (oDestination.x < 0 && oDestination.y < 0)
      {
        triggerAction = false;
      }
      cEgo.DestinationID(o.ID);
    }
    else if (cEgo.DestinationType() == eLocationCharacter)
    {
      Character* c = Character.GetAtScreenXY(mouse.x, mouse.y);
      cEgo.DestinationID(c.ID);
    }
    mouseMode = mouse.Mode;
    Room.ProcessClick(mouse.x, mouse.y, mouseMode);
  }
}

function on_event(EventType event, int data)
{
  if (player.Room == NOTEBOOK)
  {
    triggerAction = false;
    return;
  }
  if (event == eEventEnterRoomBeforeFadein)
  {
    //triggerAction = true;
  }
}
function hEngineSwitch_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("A sturdy switch labeled \"Engine\" stands out among the controls. Flipping it might hold power over the plane's fate, but Clara knows better than to meddle with it.");
}

function hEngineSwitch_Interact(Hotspot *theHotspot, CursorMode mode)
{
  oEngineSwitch.Visible = true;
  cEgo.FaceDirection(eDirectionUp);
}

function oEngineSwitch_Interact(Object *theObject, CursorMode mode)
{
  if (theObject.Graphic == 967)
  {
    theObject.Graphic = 968;
    Wait(40);
    Display(" As Clara flips the engine switch, a sudden jolt rocks the plane. The engines sputter and whine before falling silent, leaving an eerie stillness. Panic spreads through the cabin as the aircraft begins to tilt downward, the unmistakable signs of an impending crash.");
    //Airplane crash death sequence
  }
  else
  {
    theObject.Graphic = 967;
    Wait(40);
    oEngineSwitch.Visible = false;
  }
}

function oEngineSwitch_Look(Object *theObject, CursorMode mode)
{
  Display("A sturdy switch labeled \"Engine\" stands out among the controls. Flipping it might hold power over the plane's fate, but Clara knows better than to meddle with it.");
}

function hInstrumentPanel_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("The instrument panel is a maze of buttons, switches, and glowing gauges, each vital to the pilot's precise navigation.");
}

function oInsideFirstAidKit_Look(Object *theObject, CursorMode mode)
{
  if (cEgo.HasInventory(iClearTape))
  {
    Display("A compact first aid kit, its contents meticulously organized. Among the usual supplies, a spool of green thread stands out as particularly useful.");
    return;
  }
  
  Display("A compact first aid kit, its contents meticulously organized. Among the usual supplies, a spool of green thread and a roll of clear tape stand out as particularly useful.");
}

function oInsideFirstAidKit_Interact(Object *theObject, CursorMode mode)
{
  oInsideFirstAidKit_Look(theObject, mode);
}

function oGreenThread_Look(Object *theObject, CursorMode mode)
{
  Display("A spool of sturdy green thread, neatly wound and ready for stitching emergencies.");
}

function oGreenThread_Interact(Object *theObject, CursorMode mode)
{
  if (cEgo.HasInventory(iGreenThread))
  {
    Display("You already have green thread in your pocket.");
    return;
  }
  
  cEgo.UnlockView();
  cEgo.LockViewOffset(CLARAFIRSTAIDKIT_1005, 14, 0);
  oGreenThread.Visible = false;
  cEgo.Animate(3, 9, eOnce, eBlock, eForwards);
  Display("You tear off a piece of green thread and place it in you pocket.");
  cEgo.AddInventory(iGreenThread);
  oGreenThread.Visible = true;
}

function oClearTape_Look(Object *theObject, CursorMode mode)
{
  Display("A small roll of clear tape, tucked neatly among the other supplies.");
}

function oClearTape_Interact(Object *theObject, CursorMode mode)
{
  cEgo.UnlockView();
  cEgo.LockViewOffset(CLARAFIRSTAIDKIT_1005, -1, 0);
  cEgo.Animate(4, 9, eOnce, eBlock, eForwards);
  Display("You take the clear tape and place it in your pocket.");
  cEgo.AddInventory(iClearTape);
  oClearTape.Visible = false;  
}

function oFirstAidKit_Look(Object *theObject, CursorMode mode)
{
  Display("The first aid kit is neatly secured, its contents well organized behind a sturdy, red exterior. A sense of reassurance comes from its presence.");
}

function oFirstAidKit_Interact(Object *theObject, CursorMode mode)
{
  if (cEgo.x == (theObject.X + 10) && cEgo.y == theObject.Y)
  {
    cEgo.LockViewOffset(CLARAFIRSTAIDKIT_1005, 1, 0);
  }
  else
  {
    cEgo.Walk(theObject.X + 5, theObject.Y, eBlock, eWalkableAreas);
    cEgo.LockViewOffset(CLARAFIRSTAIDKIT_1005, 1, 0);
    cEgo.x += 5;
  }
  cEgo.Animate(1, 9, eOnce, eBlock, eForwards);
  oFirstAidKit.Visible = false;
  cEgo.Animate(2, 9, eOnce, eBlock, eForwards);
  
  oInsideFirstAidKit.Visible = true;
  oGreenThread.Visible = true;
  if (!cEgo.HasInventory(iClearTape))
  {
    oClearTape.Visible = true;
  }
}

function hCockpitChair_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("The seats in the cockpit are large and ergonomic, designed for long hours of precise control. Below the copilot's seat, you spot something attached to the underside.");
}

function hCockpitWindow_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("The windows offer a picturesque view of the sky, with soft clouds rolling past like a living painting. The sunlight streams through, giving the cabin a warm, serene glow. It's a peaceful moment, but Clara's investigative instincts remind her to stay alert.");
}

int pilotAnimationCycle = 0;
function handlePilot()
{ 
  switch(pilotAnimationCycle)
  {
    case 0:
    {
      if (!IsTimerExpired(1)) break;
      
      pilotAnimationCycle++;
    }
    case 1:
    {
      cPilot.LockView(COPILOTSEATED_1708);
      cPilot.Animate(1, 9, eOnce, eNoBlock, eForwards);
      pilotAnimationCycle++;
      
      break;
    }
    case 2:
    {
      if (!cPilot.Animating)
      {
        cPilot.UnlockView();
        pilotAnimationCycle++;
        SetTimer(1, 1000);
        pilotAnimationCycle = 0;
      }
      
      break;
    }
  }
}

bool copilotButtonLoop = 1;
function handleCopilot()
{
  if (!IsTimerExpired(2)) return;
  
  SetTimer(2, 1500);
  
  cCopilot.LockView(COPILOTSEATED_1708);
  cCopilot.Animate(copilotButtonLoop, 9, eOnce, eNoBlock, eForwards);
  
  if (copilotButtonLoop == 1)
    copilotButtonLoop = 3;
  else
    copilotButtonLoop = 1;
}

function initRadar()
{
  oRadar.SetView(AIRPLANEDETAILS_5001);
  oRadar.Animate(4, 18, eRepeat, eNoBlock, eForwards);
}

function initCloud()
{
  oCockpitClouds.SetView(AIRPLANECLOUDS_5002);
  oCockpitClouds.Animate(1, 9, eRepeat, eNoBlock, eForwards);
}

function initClara()
{
  cEgo.x = 160;
  cEgo.y = 155;
  cEgo.FaceDirection(eDirectionUp);
}

function initPilot()
{
  cPilot.SetIdleView(PILOTSEATED_1705, 5);
  cPilot.AnimationSpeed = 9;
  cPilot.Loop = 1;
  SetTimer(1, 1000);
}

function initCopilot()
{
  cCopilot.SetIdleView(-1, 0);
  cCopilot.AnimationSpeed = 9;
  SetTimer(2, 1500);
}

function room_Load()
{
  initClara();
  initPilot();
  initCopilot();
  initRadar();
  initCloud();
}

function room_LeaveBottom()
{
  cEgo.ChangeRoom(3);
}

function on_mouse_click(MouseButton button)
{
  if (button == eMouseLeft && Mouse.Mode == eModeExit)
  {
    if (oInsideFirstAidKit.Visible)
    {
      cEgo.UnlockView();
      cEgo.LockViewOffset(CLARAFIRSTAIDKIT_1005, 1, 0);
      cEgo.Animate(2, 9, eOnce, eBlock, eBackwards);
      oFirstAidKit.Visible = true;
      cEgo.Animate(1, 9, eOnce, eBlock, eBackwards);
      cEgo.UnlockView();
      
      cEgo.FaceDirection(eDirectionRight);
      oInsideFirstAidKit.Visible = false;
      oGreenThread.Visible = false;
      oClearTape.Visible = false;
      
      return;
    }
    
    if (oEngineSwitch.Visible)
    {
      oEngineSwitch.Visible = false;
    }
  }
  
  if (oInsideFirstAidKit.Visible)
  {
    mouse.Mode = eModeExit;
    
    if (oInsideFirstAidKit.IsUnderMouse() || oGreenThread.IsUnderMouse() || oClearTape.IsUnderMouse())
    {
      mouse.Mode = eModeInteract;
    }
  }
  
  if (oEngineSwitch.Visible)
  {
    mouse.Mode = eModeExit;
    
    if (oEngineSwitch.IsUnderMouse())
    {
      mouse.Mode = eModeInteract;
    }
  }
  
  if (!IsGamePaused())
  {
    if (button == eMouseRight && invCursorToggle)
    {
      return;
    }
    
    if ((button == eMouseRight) && (Mouse.IsOverWalkableArea() || Mouse.IsOverNothing()) && !(Mouse.IsOverHotspot()))
    {
      Display("The cockpit is a well-organized maze of buttons, dials, and flickering lights. The controls are precise and intricate, each gauge serving a specific purpose in keeping the plane on course. The atmosphere is one of focused professionalism, with the hum of the engines and the steady movements of the pilot and copilot creating a rhythm of calm authority.");
      ClaimEvent();
    }
  }
}

function handlePopovers()
{
  if (oInsideFirstAidKit.Visible)
  {
    mouse.Mode = eModeExit;
    
    if (oInsideFirstAidKit.IsUnderMouse() || oGreenThread.IsUnderMouse() || oClearTape.IsUnderMouse())
    {
      mouse.Mode = eModeInteract;
    }
  }
  
  if (oEngineSwitch.Visible)
  {
    mouse.Mode = eModeExit;
    
    if (oEngineSwitch.IsUnderMouse())
    {
      mouse.Mode = eModeInteract;
    }
  }
}

function room_RepExec()
{
  handlePopovers();
  handleCopilot();
  handlePilot();
}

NotebookButton* iconbarButtons[];

function initialize_icon_bar()
{
  iconbarButtons = new NotebookButton[4];
  
  for (int i = 0; i < Game.GetFrameCountForLoop(ICONBARICONS, 0); i++)
  {
    iconbarButtons[i] = new NotebookButton();
    NotebookButton *iconbarButton = iconbarButtons[i];
    
    ViewFrame *colorViewFrame = Game.GetViewFrame(ICONBARICONS, 0, i);
    ViewFrame *mouseOverViewFrame = Game.GetViewFrame(ICONBARICONS, 1, i);
    ViewFrame *pushedViewFrame = Game.GetViewFrame(ICONBARICONS, 2, i);
    ViewFrame *silhouetteViewFrame = Game.GetViewFrame(ICONBARICONS, 3, i);
    
    iconbarButton.coloredGraphic = colorViewFrame.Graphic;
    iconbarButton.coloredMousedOverGraphic = mouseOverViewFrame.Graphic;
    iconbarButton.coloredPushedGraphic = pushedViewFrame.Graphic;

    iconbarButton.greyGraphic = colorViewFrame.Graphic;
    iconbarButton.greyMousedOverGraphic = colorViewFrame.Graphic;
    iconbarButton.greyPushedGraphic = colorViewFrame.Graphic;

    iconbarButton.silhouetteGraphic = silhouetteViewFrame.Graphic;
    iconbarButton.silhouetteMousedOverGraphic = silhouetteViewFrame.Graphic;
    iconbarButton.silhouettePushedGraphic = silhouetteViewFrame.Graphic;
    
    iconbarButton.variant = eSilhouette;
    
    Button *iconbarControlButton = gIconbar.Controls[i+1].AsButton;
    iconbarControlButton.Clickable = false;
    iconbarControlButton.NormalGraphic = silhouetteViewFrame.Graphic;
    iconbarControlButton.MouseOverGraphic = silhouetteViewFrame.Graphic;
    iconbarControlButton.PushedGraphic = silhouetteViewFrame.Graphic;
  }
}

// notebook
function btnNotebook_OnClickHandler(GUIControl *control, MouseButton button)
{
  player.ChangeRoom(19);
}

// compact and clear tape
function btnCompactClearTape_OnClickHandler(GUIControl *control, MouseButton button)
{
}

// lipstick
function btnLipstick_OnClickHandler(GUIControl *control, MouseButton button)
{
}

// lens
function btnLens_OnClickHandler(GUIControl *control, MouseButton button)
{
}

// map
function btnMap_OnClickHandler(GUIControl *control, MouseButton button)
{
}

// current inventory
function btnCurInv_OnClickHandler(GUIControl *control, MouseButton button)
{
  if (player.ActiveInventory != null)
  {
    mouse.Mode = eModeUseinv;
  }
  invCursorToggle = true;
}

// pocket
function btnPocket_OnClickHandler(GUIControl *control, MouseButton button)
{
  show_inventory_window();
}

// save
function btnSaveMain_OnClickHandler(GUIControl *control, MouseButton button)
{
  show_save_game_dialog();

  // this is for restore dialog
  //show_restore_game_dialog();
}

// menu
function btnMenu_OnClickHandler(GUIControl *control, MouseButton button)
{
  open_gui(gPanel);
}

// quit
function btnQuitMain_OnClickHandler(GUIControl *control, MouseButton button)
{
  open_gui(gExitGame);
}

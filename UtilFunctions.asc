int currentLoop;

void choose_cursor()
{
  mouse.Mode = eModeEmpty;
  
  if (Mouse.IsOverWalkableArea()) 
  {
    mouse.Mode = eModeWalkto;
  }

  if (Mouse.IsOverHotspot())
  {
    mouse.Mode = eModeInteract;
  }

  if (Mouse.IsOverCharacter())
  {
    mouse.Mode = eModeTalkto;
  }

  if (Mouse.IsOverObject())
  {
    mouse.Mode = eModeInteract;
  }
}

void handle_time()
{
  currentLoop++;
}

int timerSetAt[20];
int timerDurationInLoops[20];

function StartTimerByLoops(int timerID, int durationInLoops)
{
  if (timerID < 1 || timerID > 20)
    return;

  timerDurationInLoops[timerID - 1] = durationInLoops;
  timerSetAt[timerID - 1] = currentLoop;
  SetTimer(timerID, durationInLoops);
}

function StartTimerBySeconds(int timerID, float durationInSeconds)
{
  if (timerID < 1 || timerID > 20)
    return;

  int gameSpeed = GetGameSpeed();
  int durationInLoops = FloatToInt(durationInSeconds * IntToFloat(gameSpeed));
  StartTimerByLoops(timerID, durationInLoops);
}

int GetTimeRemainingInLoops(int timerID)
{
  if (timerID < 1 || timerID > 20)
    return -1;

  int elapsedLoops = currentLoop - timerSetAt[timerID - 1];
  int remainingLoops = timerDurationInLoops[timerID - 1] - elapsedLoops;

  if (remainingLoops > 0)
    return remainingLoops;
  else
    return 0;
}

float GetTimeRemainingInSeconds(int timerID)
{
  int remainingLoops = GetTimeRemainingInLoops(timerID);
  //Display(String.Format("remainingLoops: %d", remainingLoops));
  if (remainingLoops <= 0)
    return 0.0;

  int gameSpeed = GetGameSpeed();
  if (gameSpeed <= 0)
    return 0.0;

  /*
  Display(String.Format("gameSpeed: %d", gameSpeed));
  Display(String.Format("IntToFloat(remainingLoops): %.2f", IntToFloat(remainingLoops)));
  Display(String.Format("IntToFloat(gameSpeed): %.2f", IntToFloat(gameSpeed)));
  Display(String.Format("result: %.2f", IntToFloat(remainingLoops) / IntToFloat(gameSpeed)));
  */
  return IntToFloat(remainingLoops) / IntToFloat(gameSpeed);
}

int GetCurrentLoop()
{
  return currentLoop;
}
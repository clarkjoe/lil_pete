#define HANDLE_TIMER 5
#define HANDLE_W_THREAD_TIMER 6

int cordOffsetX = 17;
int cordOffsetY = 0;
bool sitting = true;

ReflectedCharacter* reflectedClara;

function loadClara()
{
  if (reflectedClara == null)
    reflectedClara = ReflectedCharacter.Create(cEgo, 126);
    
  if (player.PreviousRoom == 19)
    return;
  
  cEgo.x = 163;
  cEgo.y = 165;
  cEgo.FaceDirection(eDirectionUp);
  
  oReflectedClara.Visible = true;
  
  sitting = false;
}

function loadCarlos()
{
  //cCarlos.ChangeRoom(player.Room, 85, 138);
  //cCarlos.LockView(CARLOSBATHROOM_1204);
}

function loadJoanna()
{
  //cJoanna.ChangeRoom(player.Room, 123, 131);
  //cJoanna.LockView(JOANNABATHROOM_1104);
  //cJoanna.Animate(0, 49, eRepeat, eNoBlock, eForwards);
}

function loadQueenie()
{
  if (cEgo.PreviousRoom == 19)
    return;
  
  if (cQueenie.Room == player.Room)
  {
    cQueenie.LockView(QUEENIEBATHROOM);
    cQueenie.Loop = 0;
    cQueenie.x = 158;
    cQueenie.y = 129;
  }
}

function loadObjects()
{
  oHandle.Graphic = BATHROOM_HANDLE_SIDE;
  oHandle.Visible = true;
  
  oCord.Graphic = BATHROOM_CORD;
  oCord.Visible = true;
  
  oCordWithThread.Graphic = BATHROOM_CORD_W_THREAD;
  oCordWithThread.Visible = false;
  
  oCordWithThreadLoose.Graphic = BATHROOM_CORD_W_THREAD_HANDLE_LOOSE;
  oCordWithThreadLoose.Visible = false;
  oCordWithThreadLoose.Baseline = 120;
  
  oCordWithThreadTaut.Graphic = BATHROOM_CORD_W_THREAD_HANDLE_TAUT;
  oCordWithThreadTaut.Visible = false;
  oCordWithThreadTaut.Baseline = 120;
  
  oServiceSign.Graphic = BATHROOM_SIGN_OFF;
  oServiceSign.Visible = true;
}

function loadCloud()
{
  oBathroomClouds1.SetView(AIRPLANECLOUDS_5002);
  oBathroomClouds1.Animate(1, 9, eRepeat, eNoBlock, eBackwards);
}

function room_Load()
{  
  loadClara();
  loadCarlos();
  loadJoanna();
  loadQueenie();
  loadCloud();
  
  if (player.PreviousRoom == 19)
  {
    cEgo.LockViewFrame(CLARASIT_1003, 2, 0);
    return;
  }
  
  loadObjects();
}

function doInitialQueenieInteraction()
{
  oCigarette.Visible = true;
  cQueenie.Animate(0, 18, eOnce, eBlock, eForwards);
  cQueenie.Animate(0, 18, eOnce, eBlock, eForwards);
  cQueenie.Animate(0, 18, eOnce, eBlock, eForwards);
  cEgo.Say("Oh! I'm sorry. I didn't know anyone was...");
  cQueenie.Animate(1, 9, eOnce, eBlock, eForwards);
  cQueenie.Say("It's alright. This plane isn't exactly spacious. Go ahead, take a seat, darling.");
  Point *hPoint = hBathroomCouch.Position();
  cEgo.Walk(hPoint.x, hPoint.y, eNoBlock, eAnywhere);
  cQueenie.Animate(1, 9, eOnce, eBlock, eBackwards);
  cQueenie.Animate(0, 18, eOnce, eBlock, eBackwards);
  cEgo.FaceDirection(eDirectionLeft);
  cEgo.LockViewOffset(CLARASIT_1003, 9, 0);
  cEgo.Animate(2, 9, eOnce, eNoBlock, eBackwards);
  cQueenie.Animate(0, 18, eOnce, eBlock, eBackwards);
  cQueenie.LockViewOffset(QUEENIEGOSSIP_1155, 1, 0);
  oCigarette.Visible = false;
  cQueenie.Animate(3, 9, eOnce, eBlock, eForwards, 1);
  cQueenie.LockViewFrame(QUEENIEGOSSIP_1155, 4, 0);
  cQueenie.LockViewOffset(QUEENIEGOSSIP_1155, 19, 6);
  cEgo.on = false;
  return;
}

function room_AfterFadeIn()
{
  if (cCarlos.Room == player.Room)
  {
    Wait(GetGameSpeed()/2);
    cCarlos.Animate(1, 9, eOnce, eBlock, eForwards);
    cEgo.Say("Oh! I didn't realize.");
    cCarlos.Say("Get a good look, toots?");
    cEgo.Say("Not what I was aiming for, Carlos. My mistake!");
    cEgo.Walk(cEgo.x, cEgo.y + 100, eBlock, eAnywhere);
  }
  
  if (cJoanna.Room == player.Room)
  {
    Wait(GetGameSpeed()/2);
    cJoanna.StopMoving();
    cJoanna.Animate(1, 9, eOnce, eBlock, eForwards);
    cEgo.Say("Oh! I didn't realize anyone was in here.");
    cJoanna.Say("No worries, Clara. Just washing up. I'll be out in a moment.");
    cEgo.Say("Take your time. I'll wait.");
    cEgo.Walk(cEgo.x, cEgo.y + 100, eBlock, eAnywhere);
  }
  
  if (cQueenie.Room == player.Room)
  {
    if (player.PreviousRoom != 19)
      doInitialQueenieInteraction();
    
    globalChooseCursor = false;
    
    //cEgo.Animate(2, 9, eOnce, eBlock, eForwards);
    //cEgo.UnlockView();
    //cEgo.FaceDirection(eDirectionLeft);
    //cEgo.Walk(cEgo.x - 10, cEgo.y, eBlock, eAnywhere);
    
    //Clara sits down
    //Clara can chat with Queenie about notebook stuff
    //Right click on Queenie will be description of Queenie
    //Right click everywhere else is just a description on the bathroom
    //Cursor is walk everywhere except Queenie
    //Left clicking walk cursor will trigger exit dialog
    //cEgo.Say("It's been a pleasure, Queenie. I'll leave you to it and give you some privacy.");
    //cQueenie.Say("Appreciate it, love. I'm sure we'll be seeing more of each other.");
  }
  
  if (activeDialog != null)
  {
    activeDialog.Start();
    return;
  }
}

function oHandle_AnyClick(Object *theObject, CursorMode mode)
{
  if (mode == eModeEmpty)
  {
    cEgo.Animate(3, 4, eOnce, eBlock, eForwards);
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionUp);
    oCordWithThread.Visible = false;
    oHandle.Visible = false;
    oCordWithThreadLoose.Visible = true;
  }
}


function on_mouse_click(MouseButton button)
{
  if (sitting && mouse.Mode == eModeExit)
  {
    cEgo.Animate(2, 4, eOnce, eBlock, eForwards);
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionLeft);
    sitting = false;
    return;
  }
  if (mouse.Mode == eModeExit)
  {
    cEgo.Say("It's been a pleasure, Queenie. I'll leave you to it and give you some privacy.");
    cQueenie.Say("Appreciate it, love. I'm sure we'll be seeing more of each other.");
    cQueenie.LockViewFrame(QUEENIEGOSSIP_1155, 1, 0);
    cQueenie.LockViewOffset(QUEENIEGOSSIP_1155, -11, 0);
    cEgo.on = true;
    cEgo.Animate(2, 9, eOnce, eBlock, eForwards);
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionLeft);
    cEgo.Walk(cEgo.x - 20, cEgo.y + 5, eBlock, eAnywhere);
    cEgo.Walk(170, 170, eBlock, eWalkableAreas);
    globalChooseCursor = true;
  }
  
  if (mouse.Mode == eModeEmpty)
  {
    if (button == eMouseRight)
    {
      cEgo.Animate(2, 4, eOnce, eBlock, eBackwards);
      oCordWithThread.Visible = true;
      cEgo.UnlockView();
      cEgo.FaceDirection(eDirectionUp);
      cEgo.y = cEgo.y + 1;
      ClaimEvent();
      return;
    }
    if (button == eMouseLeft)
    {
      Object* theObject = Mouse.GetOverObject();
      if (theObject != null && theObject == oHandle)
      {
        oHandle_AnyClick(theObject, mouse.Mode);
        ClaimEvent();
        return;
      }
      else
      {
        Display("That's not right");
        ClaimEvent();
        return;
      }
      
      if (Mouse.IsOverCharacter() || Mouse.IsOverObject() || Mouse.IsOverHotspot())
      {
        Display("That's not right");
        ClaimEvent();
        return;
      }
      if (!Mouse.IsOverCharacter() && !Mouse.IsOverObject() && !Mouse.IsOverHotspot())
      {
        timeToShowInvalid = (GetGameSpeed() * NUMBER_SECS_SHOW_INVALID_CURSOR);
        mouse.Mode = eModeInvalid;
        ClaimEvent();
        return;
      }
    }
  }
  if (!IsGamePaused())
  {
    if (button == eMouseRight && invCursorToggle)
    {
      return;
    }
    
    if ((button == eMouseRight) && (Mouse.IsOverWalkableArea() || Mouse.IsOverNothing()) && !(Mouse.IsOverHotspot()))
    {
      Display("The bathroom is compact yet surprisingly well appointed, with sleek fixtures and polished surfaces. The small space is meticulously maintained, offering a sense of quiet efficiency. Soft lighting gives it a clean, almost serene atmosphere.");
      ClaimEvent();
    }
  }
}

function room_Unload()
{
  cCarlos.UnlockView();
}

function room_LeaveBottom()
{
  if (oCordWithThread.Visible)
  {
    Display("You don't want to leave the thread like this.");
    
    cEgo.Walk(oCord.X + cordOffsetX, oCord.Y + cordOffsetY, eBlock, eWalkableAreas);
    cEgo.FaceDirection(eDirectionLeft);
    cEgo.LockViewOffset(CLARABATHROOMTHREADA_1007, cordOffsetX - 31, cordOffsetY + 1);
    oCordWithThread.Visible = false;
    cEgo.AddInventory(iGreenThread);
    cEgo.Animate(0, 8, eOnce, eBlock, eBackwards);
    
    Wait(10);
    
    oCord.Visible = true;
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionLeft);
    
    cEgo.Walk(cEgo.x + 3, cEgo.y + 80, eBlock, eWalkableAreas);
    
    return;
  }
  
  if (oCordWithThreadLoose.Visible)
  {
    Display("You don't want to leave the thread like this.");
    cEgo.Walk(oCordWithThread.X - 10, oCordWithThread.Y, eBlock, eWalkableAreas);
    cEgo.FaceDirection(eDirectionUp);
    cEgo.LockViewOffset(CLARABATHROOMTHREADA_1007, cordOffsetX - 20, cordOffsetY + 2);
    oCordWithThreadLoose.Visible = false;
    cEgo.Animate(3, 4, eOnce, eBlock, eBackwards);
    cEgo.Animate(2, 4, eOnce, eBlock, eBackwards);
    oCordWithThread.Visible = true;
    cEgo.UnlockView();
    
    cEgo.Walk(oCord.X + cordOffsetX, oCord.Y + cordOffsetY, eBlock, eWalkableAreas);
    cEgo.FaceDirection(eDirectionLeft);
    cEgo.LockViewOffset(CLARABATHROOMTHREADA_1007, cordOffsetX - 31, cordOffsetY + 1);
    oCordWithThread.Visible = false;
    cEgo.AddInventory(iGreenThread);
    cEgo.Animate(0, 8, eOnce, eBlock, eBackwards);
    
    Wait(10);
    
    oCord.Visible = true;
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionLeft);
    
    cEgo.Walk(cEgo.x + 3, cEgo.y + 80, eBlock, eWalkableAreas);
    
    return;
  }
  
  cEgo.ChangeRoom(3);
}

function repeatedly_execute_always()
{
  if (reflectedClara != null)
    reflectedClara.Update(oReflectedClara);
}

function handleSitting()
{
  if (sitting)
    mouse.Mode = eModeExit;
}

function room_RepExec()
{
  handleSitting();
  if (!globalChooseCursor)
  {
    if (Mouse.GetOverCharacter() == cQueenie)
    {
      mouse.Mode = eModeTalkto;
    }
    else
    {
      mouse.Mode = eModeExit;
    }
  }
  
  if (!cEgo.Moving && cEgo.View == CLARABATHROOMTHREADA_1007)
  {
    mouse.Mode = eModeEmpty;
  }
  
  if (GetTimeRemainingInLoops(HANDLE_TIMER) == 1)
  {
    oHandle.SetView(AIRPLANEBATHROOMDETAILS, 0, 2);
    oHandle.Animate(0, 4, eOnce, eBlock, eBackwards);
    oHandle.Graphic = BATHROOM_HANDLE_SIDE;
  }
  
  if (GetTimeRemainingInLoops(HANDLE_W_THREAD_TIMER) == 1)
  {
    threadTied = false;
    oCordWithThreadTaut.SetView(CLARABATHROOMTHREADB_1008);
    oCordWithThreadTaut.Animate(2, 4, eOnce, eBlock, eForwards);
    Display("*ding*");
    oCordWithThreadTaut.Graphic = BATHROOM_CORD_W_THREAD_HANDLE_TAUT;
    oCordWithThreadTaut.Visible = false;
    
    oHandle.Visible = true;
    oCord.Visible = true;
    
    oServiceSign.Graphic = BATHROOM_SIGN_ON;
    Wait(50);
    Display("You hear the steward's footsteps approaching"); 
    cFlAttend.Say("Miss, do you need any assistance?");
    cEgo.Say("Oh! No, thank you. Just freshening up.");
    cFlAttend.Say("Okay.");
    Display("You hear the steward leave");
    Wait(50);
    oServiceSign.Graphic = BATHROOM_SIGN_OFF;
    cEgo.UnlockView();
  }
}

function oCord_Interact(Object *theObject, CursorMode mode)
{
  cEgo.Walk(oCord.X + 17, oCord.Y, eBlock, eWalkableAreas);
  cEgo.FaceDirection(eDirectionLeft);
  cEgo.LockViewOffset(CLARABATHROOM_1006, -8, 1);
  theObject.Visible = false;
  cEgo.Animate(1, 4, eOnce, eBlock, eForwards);
  Display("*ding*");
  oServiceSign.Graphic = BATHROOM_SIGN_ON;
  Wait(50);
  Display("You hear the steward's footsteps approaching"); 
  cFlAttend.Say("Miss, do you need any assistance?");
  cEgo.Say("Oh! No, thank you. Just freshening up.");
  cFlAttend.Say("Okay.");
  Display("You hear the steward leave");
  Wait(50);
  oServiceSign.Graphic = BATHROOM_SIGN_OFF;
  cEgo.UnlockView();
  cEgo.x -= 6;
  cEgo.y += 1;
  theObject.Visible = true;
}

function oHandle_Interact(Object *theObject, CursorMode mode)
{
  if (oHandle.Graphic == BATHROOM_HANDLE_UP)
  {
    Display("Not able to flush your poop at this time");
    return;
  }
  cEgo.Walk(oHandle.X + 12, oHandle.Y, eBlock, eWalkableAreas);
  cEgo.FaceDirection(eDirectionLeft);
  theObject.Visible = false;
  cEgo.LockViewAligned(CLARABATHROOM_1006, 4, eAlignRight);
  cEgo.Animate(4, 6, eOnce, eBlock, eForwards);
  Display("Now flushing your poop");
  StartTimerBySeconds(HANDLE_TIMER, 5.0);
  cEgo.UnlockView();
  cEgo.FaceDirection(eDirectionLeft);
  theObject.Graphic = BATHROOM_HANDLE_UP;
  theObject.Visible = true;
}

function oObject0_UseInv(Object *theObject, CursorMode mode)
{
  if (theObject.ID == iGreenThread.ID)
  {
    Display("put it on.");
  }
}

function oCord_UseInv(Object *theObject, CursorMode mode)
{
  if (cEgo.ActiveInventory == iGreenThread)
  {
    cEgo.Walk(oCord.X + cordOffsetX, oCord.Y + cordOffsetY, eBlock, eWalkableAreas);
    cEgo.FaceDirection(eDirectionLeft);
    cEgo.LockViewOffset(CLARABATHROOMTHREADA_1007, cordOffsetX - 31, cordOffsetY + 1);
    theObject.Visible = false;
    cEgo.LoseInventory(iGreenThread);
    cEgo.Animate(0, 4, eOnce, eBlock, eForwards);
    
    Wait(10);
    
    oCordWithThread.Visible = true;
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionLeft);
    
    return;
    cEgo.Walk(cEgo.x - 40, cEgo.y, eBlock, eWalkableAreas);
    cEgo.FaceDirection(eDirectionUp);
    cEgo.LockViewOffset(CLARABATHROOMTHREADA_1007, cordOffsetX - 20, cordOffsetY + 3);
    oCordWithThread.Visible = false;
    oHandle.Visible = false;
    cEgo.Animate(2, 4, eOnce, eBlock, eForwards);
    cEgo.Animate(3, 4, eOnce, eBlock, eForwards);
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionUp);
    oCordWithThreadLoose.Visible = true;
    
    return;
    
    cEgo.Walk(cEgo.x - 15, cEgo.y - 2, eBlock, eWalkableAreas);
    cEgo.FaceDirection(eDirectionLeft);

    oCordWithThreadLoose.Visible = false;
    cEgo.LockViewOffset(CLARABATHROOMTHREADB_1008, 12, 0);
    cEgo.Animate(0, 4, eOnce, eBlock, eForwards);
    cEgo.UnlockView();
    oCordWithThreadTaut.Visible = true;
    SetTimer(HANDLE_W_THREAD_TIMER, 100);
    cEgo.FaceDirection(eDirectionLeft);
    cEgo.x -= 2;
    
    //cEgo.LoseInventory(iGreenThread);
  }
}

function oCord_Look(Object *theObject, CursorMode mode)
{
  Display("A small service chain dangles from the ceiling, ready to signal for assistance.");
}

function oHandle_Look(Object *theObject, CursorMode mode)
{
  Display("The toilet handle is a simple metal lever, its design clean and practical. Clara notes its subtle shine, a testament to the meticulous upkeep of the plane's amenities.");
}

function oCordWithThread_Look(Object *theObject, CursorMode mode)
{
  Display("The thread wraps around the chain, forming a simple connection.");
}

function hMakeupStand_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("A small, elegant makeup stand holds an array of neatly arranged cosmetics.");
}

function hMirror_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("The mirror is framed in sleek metal, its surface perfectly reflecting the soft lighting of the bathroom.");
}

function hMirror_Interact(Hotspot *theHotspot, CursorMode mode)
{
  cEgo.FaceDirection(eDirectionUp);
  Wait(GetGameSpeed() / 2);
  Display("Clara gazes into the mirror, taking in her own reflection. Her sharp eyes are framed by her styled hair, a hint of determination set in her expression. Despite the glamorous persona she's adopted, there's a flicker of weariness beneath the surface, the weight of her mission ever-present.");
}

function hBathroomCouch_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("A plush couch sits comfortably in the bathroom, its soft upholstery inviting a moment of relaxation. It adds an unexpected touch of luxury to the otherwise functional space.");
}

function oServiceSign_Look(Object *theObject, CursorMode mode)
{
  Display("A discreet service sign is mounted near the mirror, offering passengers a way to call for assistance.");
}

function oSink_Look(Object *theObject, CursorMode mode)
{
  Display("The small sink is sleek and functional, with polished fixtures that gleam under the bathroom's lighting.");
}

function oSink_Interact(Object *theObject, CursorMode mode)
{
  cEgo.Walk(theObject.X + 2, theObject.Y + 17, eBlock, eWalkableAreas);
  cEgo.FaceDirection(eDirectionRight, eBlock);
  cEgo.LockView(CLARABATHROOM_1006);
  cEgo.Animate(5, 4, eOnce, eBlock, eForwards);
  
  if (oSink.Animating)
  {
    oSink.StopAnimating();
    ViewFrame *sinkOff = Game.GetViewFrame(AIRPLANEBATHROOMDETAILS, 2, 0);
    oSink.Graphic = sinkOff.Graphic;
  }
  else
  {
    oSink.SetView(AIRPLANEBATHROOMDETAILS);
    oSink.Animate(3, 4, eRepeat, eNoBlock, eForwards);
  }
  
  cEgo.Animate(6, 4, eOnce, eBlock, eForwards);
  cEgo.UnlockView();
  cEgo.FaceDirection(eDirectionRight);
}

function oLamp_Look(Object *theObject, CursorMode mode)
{
  Display("A sleek lamp casts a soft flattering glow over the bathroom, its frosted glass shade radiating elegance.");
}

function oLamp_Interact(Object *theObject, CursorMode mode)
{
  cEgo.Walk(theObject.X+1, theObject.Y+10, eBlock, eWalkableAreas);
  cEgo.FaceDirection(eDirectionRight);
  cEgo.LockView(CLARABATHROOM_1006);
  ViewFrame *lampOn = Game.GetViewFrame(AIRPLANEBATHROOMDETAILS, 1, 1);
  ViewFrame *lampOff = Game.GetViewFrame(AIRPLANEBATHROOMDETAILS, 1, 0);
  cEgo.Animate(2, 4, eOnce, eBlock);
  if (oLamp.Graphic == lampOn.Graphic)
  {
    oLamp.Graphic = lampOff.Graphic;
  }
  else
  {
    oLamp.Graphic = lampOn.Graphic;
  }
  
  cEgo.Animate(3, 4, eOnce, eBlock);
  cEgo.UnlockView();
  cEgo.FaceDirection(eDirectionRight);
}

function hBathroomWindows_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("The windows offer a picturesque view of the sky, with soft clouds rolling past like a living painting. The sunlight streams through, giving the cabin a warm, serene glow. It's a peaceful moment, but Clara's investigative instincts remind her to stay alert.");
}

function hToilet_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("A compact, utilitarian toilet sits snugly in the corner. Functional and unremarkable, it's a reminder that even luxury has its limits.");
}

function oCordWithThread_Interact(Object *theObject, CursorMode mode)
{
  cEgo.Walk(oCordWithThread.X - 10, oCordWithThread.Y, eBlock, eWalkableAreas);
  cEgo.FaceDirection(eDirectionUp);
  cEgo.LockViewOffset(CLARABATHROOMTHREADA_1007, cordOffsetX - 20, cordOffsetY + 2);
  oCordWithThread.Visible = false;
  cEgo.Animate(2, 4, eOnce, eBlock, eForwards);
}
function oCordWithThreadLoose_Interact(Object *theObject, CursorMode mode)
{
  cEgo.Walk(oCordWithThreadLoose.X + 19, oCordWithThreadLoose.Y - 2, eBlock, eWalkableAreas);
  cEgo.FaceDirection(eDirectionLeft);

  oCordWithThreadLoose.Visible = false;
  cEgo.LockViewOffset(CLARABATHROOMTHREADB_1008, 12, 0);
  cEgo.Animate(0, 4, eOnce, eBlock, eForwards);
  cEgo.UnlockView();
  oCordWithThreadTaut.Visible = true;
  StartTimerBySeconds(HANDLE_W_THREAD_TIMER, 7.0);
  threadTied = true;
  cEgo.FaceDirection(eDirectionLeft);
  cEgo.x -= 2;
}

function hBathroomCouch_Interact(Hotspot *theHotspot, CursorMode mode)
{
  Point *hPoint = theHotspot.Position();
  if (!cEgo.CancelableWalk(hPoint.x, hPoint.y, eDirectionLeft))
    return;
  
  cEgo.LockViewAligned(CLARASIT_1003, 2, eAlignLeft);
  //cEgo.LockView(CLARASIT_1003);
  cEgo.Animate(2, 9, eOnce, eNoBlock, eBackwards);
  sitting = true;
}

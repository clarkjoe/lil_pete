bool isLookingIntoWastebasket = false;

function repeatedly_execute()
{
  if (isLookingIntoWastebasket)
  {
    mouse.Mode = eModeEmpty;
    
    if (oInsideWastebasket.IsUnderMouse())
    {
      mouse.Mode = eModeInteract;
    }
  }
}

int objectSpeed = -1;
int cycleCounter = 0;

function handle_clouds()
{
  cycleCounter++; // Increment the counter on each game cycle

  if (cycleCounter % 25 == 0) // Check if the counter is a multiple of 10
  {
    // Move object to the right if it hasn't reached the edge of the screen
    if (oCloudsA.X > -218)  // Replace 320 with the screen boundary you want
    {
        oCloudsA.X += objectSpeed; // Moves the object to the right
    }
    else
    {
        oCloudsA.X = 127; // Resets the object to the starting point if it reaches the edge
    }  

    if (oCloudsA.X > -218)  // Replace 320 with the screen boundary you want
    {
        oCloudsB.X += objectSpeed; // Moves the object to the right
    }
    else
    {
        oCloudsB.X = 471; // Resets the object to the starting point if it reaches the edge
    }  
  }
}

function on_mouse_click(MouseButton button)
{
  if (isLookingIntoWastebasket)
  {    
    if (oInsideWastebasket.IsUnderMouse())
    {
      Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
    }
    
    ClaimEvent();
    return;
  }
  if (!IsGamePaused())
  {
    if ((button == eMouseRight) && (Mouse.IsOverWalkableArea() || Mouse.IsOverNothing()) && !(Mouse.IsOverHotspot()))
    {
      mouse.Mode = eModeLookat;
      Display("There is a wastebasket in the left corner of the room. Other hints.");
      choose_cursor();
      ClaimEvent();
    }
  }
}
function room_LeaveRight()
{
  cEgo.ChangeRoom(4, 15, 134);
}

function room_LeaveLeft()
{
  cEgo.ChangeRoom(6, 157, 154);
}

function room_FirstLoad()
{
// Play the ambient noise when the room loads
aAirplane_hum.Play(eAudioPriorityNormal, eRepeat);
a6001_AirplaneMusic.Play(eAudioPriorityNormal, eRepeat);

}

function hWasteBasket_Look(Hotspot *theHotspot, CursorMode mode)
{
  if (cEgo.HasInventory(iMagazine))
    Display("Tbere is nothing more to get here");
  else
    Display("You see something inside the wastebasket.");
}

function hWasteBasket_Interact(Hotspot *theHotspot, CursorMode mode)
{
  cEgo.Walk(29, 157, eBlock);
  cEgo.LockView(CLARA_MAIN_CABIN);
  cEgo.Animate(0, 5, eOnce, eBlock);
  
  if (cEgo.HasInventory(iMagazine))
    oInsideWastebasket.Graphic = AIRPLANE_TRASH_EMPTY;
  else
    oInsideWastebasket.Graphic = AIRPLANE_TRASH_FULL;
  
  oInsideWastebasket.Visible = true;
  isLookingIntoWastebasket = true;
  
  // disable all cursors, except touching and looking at wastebasket?
}

function oInsideWastebasket_Interact(Object *theObject, CursorMode mode)
{
  if (cEgo.HasInventory(iMagazine))
  {
    Display("Tbere is nothing more to get here");

    cEgo.Animate(0, 5, eOnce, eBlock, eBackwards);
    cEgo.UnlockView();
    cEgo.FaceDirection(eDirectionLeft);
    oInsideWastebasket.Visible = false;
    isLookingIntoWastebasket = false;
    
    return;
  }

  Display("You pick it up and place it in your purse.");
  cEgo.Animate(1, 5, eOnce, eBlock);
  cEgo.AddInventory(iMagazine);
  oInsideWastebasket.Graphic = AIRPLANE_TRASH_EMPTY;
}

function oSeatPocket_Interact(Object *theObject, CursorMode mode)
{
  Display("There is nothing more to get here");
}

function sitDown(Character *chara, Hotspot *hChair, int sitView, int sitLoop)
{
  chara.SetProperty("chairNumber", hChair1.ID);
  chara.SetProperty("isSitting", true);
  int currCharacterX = chara.x;
  
  chara.LockView(sitView);
  
  chara.x = (chara.x - 12);
  chara.Animate(sitLoop, 5, eOnce, eBlock, eBackwards);
}

function standUp(Character *chara, int standView, int standLoop)
{
  chara.SetProperty("isSitting", false);
  int currCharacterX = chara.x;
  
  chara.Animate(standLoop, 5, eOnce, eBlock, eForwards);
  cEgo.UnlockView(eStopMoving);
  cEgo.FaceDirection(eDirectionRight);
  chara.x = (currCharacterX + 12);
}

function hChair_Interact(Hotspot *theHotspot, CursorMode mode)
{
  Display(theHotspot.ScriptName);
  if (cEgo.GetProperty("isSitting") == true)
  {
    standUp(cEgo, CLARA_SIT, 3);
    
    oSeatPocket.Visible = false;
  }
  else
  {
    sitDown(cEgo, theHotspot, CLARA_SIT, 3);
    
    oSeatPocket.Visible = true;
  }
}

function hChair_Look(Hotspot *theHotspot, CursorMode mode)
{
  Display("You see a chair.");
}

function oInsideWastebasket_Look(Object *theObject, CursorMode mode)
{
  Display("You see the inside of the waste basket.");
}
